package etf.unsa.ba.BookDetails.Services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import etf.unsa.ba.BookDetails.Entities.Author;
import etf.unsa.ba.BookDetails.Entities.Book;
import etf.unsa.ba.BookDetails.Exceptions.EntryNotFoundException;
import etf.unsa.ba.BookDetails.Repositories.AuthorRepository;
import etf.unsa.ba.BookDetails.Repositories.BookRepository;
import javassist.NotFoundException;

@Service
public class BookService {

	@Autowired
	BookRepository bookRepository;
	@Autowired 
	AuthorRepository authorRepository;
	
	
	@Autowired
	public BookService(BookRepository bookRepository,
					   AuthorRepository authorRepository) {
		this.bookRepository = bookRepository;
		this.authorRepository = authorRepository;
	}
	
	
	public List<Book> findAll(){
		return bookRepository.findAll();
	}
	
	
	public Book findBookById(Long id) {
		
		Optional<Book> optionalBook = bookRepository.findById(id);
		
		if (!optionalBook.isPresent()) 
			throw new EntryNotFoundException("Book with given id not found");
	
		return optionalBook.get();
	}
	
	public List<Book> findBookByTitle(String title) {
		
		List<Book> books = bookRepository.findByTitle(title);
		return books;
	}
	
	public List<Book> findBookBySection(String section){
		List<Book> books = bookRepository.findBySection(section);
		return books;
	}
	
	public List<Author> findBookAuthors(Long bookId){
		
		Optional<Book> optionalBook = bookRepository.findById(bookId);
		if (!optionalBook.isPresent()) 
			throw new EntryNotFoundException("Book with given id not found");
		
		return optionalBook.get().getAuthors();
		
	}
	
	public Book addBook(Book book) {
		return bookRepository.save(book);
	}
	
	
	
}
